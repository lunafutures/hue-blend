{{ if .Values.tags.hue }}
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-hue
  namespace: {{ .Values.namespaces.hue }}
spec:
  stripPrefix:
    prefixes:
      - /hue
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-rust
  namespace: {{ .Values.namespaces.hue }}
spec:
  stripPrefix:
    prefixes:
      - /rust
---
apiVersion: v1
kind: Secret
metadata:
  name: hue-auth-secret
  namespace: {{ .Values.namespaces.hue }}
type: Opaque
data:
  users: {{ include "hue-chart.htpasswd" .Values.secrets.hueAuth }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: hue-auth
  namespace: {{ .Values.namespaces.hue }}
spec:
  basicAuth:
    secret: hue-auth-secret
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-hue-express
  namespace: {{ .Values.namespaces.hue }}
spec:
  entryPoints:
    - websecure
  tls:
    secretName: {{ .Values.tlsSecret }} # must be within the same namespace
  routes:
    - kind: Rule
      match: PathPrefix(`/hue`) && Host(`{{ .Values.hosts.local }}`)
      middlewares:
        - name: hue-auth
        - name: strip-hue
      services:
        - name: hue-express-service
          port: 3000
    - kind: Rule
      match: PathPrefix(`/rust`) && Host(`{{ .Values.hosts.local }}`)
      middlewares:
        - name: hue-auth
        - name: strip-rust
      services:
        - name: rust-hue-service
          port: 8000
{{ end }}